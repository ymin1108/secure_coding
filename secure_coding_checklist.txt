회원가입 및 프로필 관리
서버측 입력 검증
사용자명(username)과 비밀번호(password)에 대한 길이, 허용 문자 집합, 형식 등 서버측 검증 수행
XSS 공격 방지를 위한 입력값 필터링 및 인코딩 적용 여부 확인
CSRF 보호
회원가입, 로그인, 프로필 수정 등 모든 폼에 CSRF 토큰 사용 여부 확인
요청 위조 공격 방지 메커니즘 구현 확인
비밀번호 보안
비밀번호를 평문으로 저장하지 않고 bcrypt, Argon2 등 강력한 해시 알고리즘 사용
고유 salt 적용하여 암호화 저장 여부 확인
세션 쿠키 설정
세션 쿠키에 HttpOnly 플래그 적용 여부 확인
HTTPS 환경에서 Secure 플래그 적용 여부 확인
세션 만료 및 재인증
일정 시간 이후 세션 만료 로직 구현 여부
민감 작업 수행 시 재인증 요구 로직 구현 여부
실패 로그인 방어
로그인 실패 횟수에 따른 계정 잠금 메커니즘 적용 여부
로그인 실패 시 지연(time-out) 메커니즘 적용 여부
오류 메시지
오류 발생 시 내부 정보(스택 트레이스, DB 정보 등) 노출 방지 처리 여부
상품 등록 및 관리
폼 입력 검증
상품 제목, 설명, 가격 등의 입력 필드에 대한 서버측 검증 수행
필수 항목 체크 및 가격의 숫자 형식/범위 검증 적용 여부
XSS 방어
사용자 입력(상품 설명 등)에 대한 HTML 태그 및 스크립트 코드 이스케이프 처리
사용자 입력 필터링 적용 여부 확인
인증된 사용자만 등록
상품 등록, 수정, 삭제 기능이 로그인한 사용자에게만 허용되는지 확인
적절한 접근 제어 구현 여부 확인
소유자 확인
상품 수정 및 삭제 시 요청한 사용자가 해당 상품의 소유자인지 검증하는 로직 구현 여부
데이터 무결성
데이터베이스 저장 전 모든 필수 항목 및 형식 검증 로직 구현 여부
실시간 채팅 및 메시징
메시지 내용 검증
채팅 메시지의 길이 제한, 허용 문자 집합 검증 여부
XSS 이스케이프 처리 등 서버측 검증 수행 여부
사용자 인증
Socket 연결 시 사용자 인증 상태 확인 로직 구현 여부
로그인 상태 확인 메커니즘 적용 여부
메시지 검증
클라이언트에서 수신한 메시지 데이터의 형식 및 내용에 대한 서버측 검증 로직 존재 여부
Rate Limiting
동일 사용자의 단기간 과도한 메시지 전송 제한 기능 구현 여부
스팸 방지 메커니즘 적용 여부
연결 암호화
운영 환경에서 WSS(SSL/TLS 암호화된 웹소켓) 사용 여부
데이터 전송의 기밀성 보장 여부
안전 거래 및 신고
폼 입력 검증
신고 대상(target_id) 및 신고 사유(reason)에 대한 서버측 입력 검증 수행
길이 제한 및 XSS 방어 적용 여부
인증된 사용자 접근
신고 기능이 로그인한 사용자만 접근 가능하도록 제어되어 있는지 확인
데이터 무결성 및 로그 관리
신고 접수 시 올바른 형식의 데이터 저장 여부
신고 활동의 감사 로그 기록 여부
신고 남용 방지
동일 사용자의 반복 신고 제한 메커니즘 구현 여부
신고 건수 제한 및 관리자 검토 프로세스 구현 여부
전체 시스템
ORM 및 파라미터 바인딩
SQLAlchemy ORM 및 파라미터 바인딩을 통한 SQL 인젝션 공격 방어 여부
데이터베이스 권한
최소 권한 원칙에 따른 데이터베이스 사용자 권한 설정 여부
민감 데이터 접근 제한 여부
보안 헤더 설정
Content-Security-Policy, X-Frame-Options, X-Content-Type-Options 등 보안 헤더 적용 여부
HTTPS 적용
운영 환경에서 HTTPS 사용을 통한 데이터 전송 시 기밀성 및 무결성 보장 여부
에러 및 예외 처리
예외 처리 시 민감 정보 사용자 노출 방지 여부
에러 로그에 민감 정보 기록 방지 로직 구현 여부
라이브러리 및 의존성 관리
Flask, SQLAlchemy, Flask-SocketIO 등 사용 중인 라이브러리의 최신 보안 패치 및 업데이트 적용 여부
정기적인 의존성 점검 수행 여부